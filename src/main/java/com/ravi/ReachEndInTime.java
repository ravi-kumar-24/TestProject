package com.ravi;


import java.util.*;

public class ReachEndInTime {

    public static String reachTheEnd(List<String> grid, int maxTime) {
        int row = grid.size();
        int col = grid.get(0).length();

        if(row -1 == 0 && col -1 == 0) return "Yes";

        int[][] board = new int[row][col];
        boolean[][] visit = new boolean[row][col];
        int[][] dirs = {{-1,0}, {1, 0}, {0,-1}, {0,1}};

        for(int i = 0; i < row; i++){
            String[] tmp = grid.get(i).split("");
            for(int j = 0; j < col; j++){
                if(tmp[j].equals(".")){
                    board[i][j] = 0;
                }else{
                    board[i][j] = -1;
                }
            }
        }

        Queue<int[]> q = new LinkedList<>();
        q.offer(new int[] {0,0});

        while(!q.isEmpty()){
            int[] p = q.poll();
            visit[p[0]][p[1]] = true;

            for(int[] d : dirs){
                int x = p[0] + d[0];
                int y = p[1] + d[1];

                if(x >= 0 && x < row && y >= 0 && y < col && board[x][y] != -1 && !visit[x][y]){
                    board[x][y] = board[p[0]][p[1]] + 1;
                    q.offer(new int[] {x,y});
                    visit[x][y] = true;
                }
            }
        }
        System.out.println(board[row-1][col-1]);

        if(board[row-1][col-1] == 0 || board[row-1][col-1] > maxTime){
            return "No";
        }else{
            return "Yes";
        }
    }



    public static void main(String args[]) {
        List<String> grid = new ArrayList<>(Arrays.asList(
                "........#....#..#..#....#...#..#.#.#.#.#.#..#.....","..#..#..#.#....#..#.....#......#..##...........##.",".........#.###.##...#.....##......###............#","....##........#..#.#.#......#...#.##.......##.....",".................###...#.#...#......#.#.#.#.#...#.",".........#.....#...........##....#.#.#.##.....##..",".....#.##............#....#......#..#..#...##.....",".#.......###....#.#..##.##.#...##...#........#...#","..#.##..##..........#..........##.....##..........","#.#..##......#.#.#..##.###...#.........###..#...#.",".#..#..............#...#........#..#...#....#..#..","##..#..#........#....#........#...#.#......#.....#","#.#.......#.#..#...###..#..#.##...#.##.......#...#","#.#...#...#.....#....#......##.#.#.........#....#.",".#..........#......##..#....#....#.#.#..#..###....","#.#............#.##..#.##.##......###......#..#..#",".#..#.##...#.#......................#........#....",".....#....#.#..........##.#.#................#....","##............#.#......####...#.........#..##..#..","....#..##..##...#.........##..##....#..#.##...#...",".#........#...#..#...........#.###.....##.....##..",".......#..#..##...#..###.....#..##.........#......","...#......#..#...........###...............#......","...##.###.#.#....#...#..#.#.#....#....#.##.#...#..","..........#.......#..#..#...###....##.....#..#....",".............##.##.#.......#.#....#.......#..#..#.",".......#........#.....#....##...#...#.#...#.#.##..",".....#..#..#........#..#.....#...#.##.#....#...#..","....................#.#...#....###...###...##...#.","##.#.....##.....#..#.#.#...........#.#.##...#..#.#","#...........#....#.##...#.#.....#...#.....#.#.....","..#..##...#........#.##..#.....##.......#...#.#.#.","......#....#...##...........#..#.......#.##.......","......#..#..#.###..........#...#...........#..#...","....#.#..#..#.#.#...#.......#...#.##......#.......","....#.......#..#........#...#.#...#......#.......#",".#....##...#.#..#....#.#.##........#..#.#.........","#....#.......#..##......##...............#..#.##..","...#..##.......#.....#....#...#.#......#..##..###.",".....#...#...#...#...#...#..##...#..#.............","....##......#...#..#...#...#.#....#.....#..#.##...","...##.......#..##.....#........#.#....#...#.......","..#...#....#...#.###......#................#......","...#...###...#..##...###.....................#....",".....#....#....#...#.#.#.##....##......#....##....","...#.###...##.........#..........#.##.#.....#.....","##..#...#.........#.......#......##...........####","...###.#..........#.....#####........#..#.#.#...#.","...#..#.....#..##.##.#.....##...#...#.#.....#...##",".##.......#.##....#............#..................","#.....#.........#.#.........#..###....##...##.....","#....#.....#...#.....#.##...##...####........#....","#...........#..#...#........#.##..##..#...#.#.....","..#.#................#......###..##.#.#...##...#..",".#.#....#..#............#....#......#............#","..#..#...#.#.#...#...........#.......##.#...#.#...","#..........#.....#.....#......#.......#.#...##....",".......#...........#...........#....#............#","...####.#.....#.##.....#.......##.#..#......#.....",".#..#.....#..#......#.............#.#.#..##...#...","..#.#.#.........#...#..#.......#................##",".#..##.#.#...#.............#..#..........#..#...#.","....#........#......#...###..#.#..................","#..#..#.....#.#.#...##....##........#........#....",".....#.#.......##.......#.....#........#..##..#...","#.#.##........#..##.#..#.#...#........#.#......#..","....#.#.#.......#.##.##...##...#..#.###...#.#.#...",".....##.#....#........#....#.#........#.#.#.....#.",".....#..##..#.#....#.......#...#.#.###.........#.#","#.....#.##..#.......###.........#..##..#......##.."
        ));

        reachTheEnd(grid, 2244);
    }
}
